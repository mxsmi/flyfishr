library(shiny); runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
?call_llm
??call_llm
runApp('StreamNotesApp.R')
?call_llm
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
setwd("~/Documents/GitHub/StreamNotes/R")
text <- readLines("./prompt.txt")
text <- readLines("~/prompt.txt")
text <- readLines("prompt.txt")
text <- readLines("prompt.txt")
text
?readLines
library(readr)
?read_file
setwd("~/Documents/GitHub/StreamNotes")
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
getwd()
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
source("~/Documents/GitHub/StreamNotes/R/dischargePlot.R")
runApp('StreamNotesApp.R')
source("~/Documents/GitHub/StreamNotes/R/dischargePlot.R")
runApp('StreamNotesApp.R')
source("~/Documents/GitHub/StreamNotes/R/dischargePlot.R")
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
sites <- whatNWISsites(stateCd = "CO", )
river_sites <- sites %>% filter(grepl("frying", sites$station_nm, ignore.case = TRUE))
siteNo <- "09080400"
library(dataRetrieval)
library(dplyr)
library(stringr)
library(ggplot2)
library(lubridate)
sites <- whatNWISsites(stateCd = "CO", )
sites <- whatNWISsites(stateCd = "CO", )
sites <- whatNWISsites(stateCd = "CO")
river_sites <- sites %>% filter(grepl("frying", sites$station_nm, ignore.case = TRUE))
library(dataRetrieval)
library(dplyr)
library(stringr)
library(ggplot2)
library(lubridate)
sites <- whatNWISsites(stateCd = "CO")
class(river_sites)
class(sites)
View(sites)
sites <- sites %>%
filter(str_detect(site_tp_cd, "^(ST|SP)")) ## keep only streams and springs
?lapply
pCode <- "00060"
start.date <- Sys.Date() - days(3)
end.date <- Sys.Date() + days(3)
sCode <- "00003"
?readNWISuv
rivers <- readNWISuv(
siteNumbers = sites$site_no,
parameterCd = pCode,
startDate = start.date,
endDate = end.date
)
class(sites$site_no)
rivers <- readNWISuv(
siteNumbers = unique(sites$site_no),
parameterCd = pCode,
startDate = start.date,
endDate = end.date
)
?whatNWISdata
available_data <- whatNWISdata(
siteNumber = unique(sites$site_no),
service = "uv"  # unit values (instantaneous)
)
siteNo <- "09080400"
?whatNWISdata
available_data <- whatNWISdata(
siteNumber = siteNo,
service = "uv"  # unit values (instantaneous)
)
head(available_data)
dim(available_data)
>map
?map
Map
?Map
param_info <- readNWISpCode("00060")  # Get info about discharge parameter
param_info
s <- lapply(unique(sites$site_no),
function(site) {whatNWISdata(siteNumber = site, service = "uv")})
runApp('StreamNotesApp.R')
?selectInput
?sort
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
?arrange
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
sites <- sites %>%
filter(str_detect(site_tp_cd, "^(ST|SP)")) %>%   ## keep only streams and springs
filter(str_detect(station_nm, "NEAR"))
unique(sites$site_tp_cd)
sites <- whatNWISsites(stateCd = "CO")
sites <- sites %>%
filter(site_tp_cd == "ST" | site_tp_cd == "SP") %>%   ## keep only streams and springs
filter(str_detect(station_nm, "NEAR"))
sites <- whatNWISsites(stateCd = "WA")
sites <- sites %>%
filter(site_tp_cd == "ST" | site_tp_cd == "SP") %>%   ## keep only streams and springs
filter(str_detect(station_nm, "NEAR"))
sites <- whatNWISsites(stateCd = "WA")
sites <- sites %>%
filter(nchar(site_tp_cd) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP",   ## keep only streams and springs
# str_detect(station_nm, "NEAR"),
)
sites <- whatNWISsites(stateCd = "WA")
sites <- sites %>%
filter(nchar(site_no) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP",   ## keep only streams and springs
# str_detect(station_nm, "NEAR"),
)
s <- lapply(unique(sites$site_no),
function(site) {whatNWISdata(siteNumber = site, service = "dv")})
s <- readNWISsite(siteNumbers = "09080400")
dim(s)
str(s)
sites <- whatNWISsites(stateCd = "WA")
sites_filtered <- sites %>%
filter(nchar(site_no) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP",   ## keep only streams and springs
str_detect(site_tp_cd, "NEAR")
)
View(sites_filtered)
sites_filtered <- sites %>%
filter(nchar(site_no) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP",   ## keep only streams and springs
str_detect(station_nm, "NEAR")
)
runApp('StreamNotesApp.R')
?str_detect
runApp('StreamNotesApp.R')
sites_filtered <- sites %>%
filter(nchar(site_no) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP", ## keep only streams and springs
str_detect(station_nm, "NEAR"),
str_detect(station_nm, " AT ", negate = TRUE),
str_detect(station_nm, " RM ", negate = TRUE)
)
sites_filtered <- sites %>%
filter(nchar(site_no) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP", ## keep only streams and springs
str_detect(station_nm, "NEAR"),
str_detect(station_nm, " AT ", negate = TRUE),
str_detect(station_nm, " RM ", negate = TRUE),
str_detect(tolower(station_nm), "yakima")
)
s <- lapply(unique(sites_filtered$site_no),
function(site) {whatNWISdata(siteNumber = site, service = "uv")})
View(s[[1]])
class(s)
whatNWISdata(siteNumber = "12474500", service = "uv")
View(s[[2]])
nrow(s)
s_filtered <- s[sapply(s, nrow) > 0]
s_filtered[[1]]
length(s_filtered)
s
sites_filtered <- sites %>%
filter(nchar(site_no) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP", ## keep only streams and springs
str_detect(tolower(station_nm), "yakima")
)
s <- lapply(unique(sites_filtered$site_no),
function(site) {whatNWISdata(siteNumber = site, service = "uv")})
s_filtered <- s[sapply(s, nrow) > 0]
length(s_filtered)
s_filtered
class(s_filtered[[1]]$parm_cd)
s_filtered <- s_filtered["00060" %in% s_filtered$parm_cd]
length(s_filtered)
s_filtered <- s[sapply(s, nrow) > 0]
length(s_filtered)
s_filtered <- s_filtered[sapply(s_filtered, function(df) {"00060" %in% df$parm_cd})]
length(s_filtered)
s_filtered
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
class(s_filtered)
str(s_filtered[[1]])
s_f_vec <- vapply(sites_filtered, function(df) {df$site_no[1]})
?vapply
len <- length(s_filtered)
len
s_f_vec <- vapply(sites_filtered,
function(df) {df$site_no[1]},
FUN.VALUE = character(len))
s_f_vec <- vapply(s_filtered,
function(df) {df$site_no[1]},
FUN.VALUE = character(len))
s_f_vec <- vapply(s_filtered,
function(df) {df$site_no[1]},
FUN.VALUE = character(1))
s_f_vec
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
source("~/Documents/GitHub/StreamNotes/R/dischargeDataAvailable.R")
runApp('StreamNotesApp.R')
source("~/Documents/GitHub/StreamNotes/R/dischargeDataAvailable.R")
runApp('StreamNotesApp.R')
View(sites)
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
?selectizeInput
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
source("prompt.txt")
setwd("~/Documents/GitHub/StreamNotes/R")
source("prompt.txt")
setwd("~/Documents/GitHub/StreamNotes")
getwd()
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
?leaflet
install.packages("leaflet")
library(leaflet)
?leaflet
sites <- whatNWISsites(stateCd = "WA")
sites_filtered <- sites %>%
filter(nchar(site_no) == 8,
site_tp_cd == "ST" | site_tp_cd == "SP", ## keep only streams and springs
str_detect(tolower(station_nm), "yakima")
)
View(sites_filtered)
siteNo <- "12510500"
pCode <- "00060"
start.date <- Sys.Date() - days(3)
end.date <- Sys.Date() + days(3)
sCode <- "00003"
rivers <- readNWISuv(
siteNumbers = unique(sites$site_no),
parameterCd = pCode,
startDate = start.date,
endDate = end.date
)
rivers <- readNWISuv(
siteNumbers = siteNo,
parameterCd = pCode,
startDate = start.date,
endDate = end.date
)
View(rivers)
rivers <- renameNWISColumns(rivers)
rivers <- readNWISuv(
siteNumbers = siteNo,
parameterCd = pCode,
startDate = start.date,
endDate = end.date
)
river_stat <- readNWISdv(
siteNumbers = siteNo,
parameterCd = pCode,
startDate = start.date,
endDate = end.date,
statCd = sCode
)
View(river_stat)
site_info <- readNWISsite()
site_info <- readNWISsite(siteNumbers = siteNo)
View(site_info)
leaflet(site_info)
# Extract coordinates
lat <- site_info$dec_lat_va
lon <- site_info$dec_long_va
# Create leaflet map
map <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap tiles
setView(lng = lon, lat = lat, zoom = 12) %>%  # Center on the site
addMarkers(lng = lon, lat = lat)
# Display the map
map
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
library(shiny); runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
View(willamette_temp)
willamette_temp <- readNWISuv(
siteNumbers = "14211720",
parameterCd = "00010",
startDate = Sys.Date() - days(3),
endDate = Sys.Date()
)
w <- renameNWISColumns(willamette_temp)
willamette_temp_stat <- readNWISuv(
siteNumbers = "14211720",
parameterCd = "00010",
startDate = Sys.Date() - days(3),
endDate = Sys.Date(),
stateCd = "00003"
)
willamette_temp_stat <- readNWISuv(
siteNumbers = "14211720",
parameterCd = "00010",
startDate = Sys.Date() - days(3),
endDate = Sys.Date(),
stateCd = sCode
)
willamette_temp_stat <- readNWISdv(
siteNumbers = "14211720",
parameterCd = "00010",
startDate = Sys.Date() - days(3),
endDate = Sys.Date(),
stateCd = sCode
)
willamette_temp_stat <- readNWISdv(
siteNumbers = "14211720",
parameterCd = "00010",
startDate = Sys.Date() - days(3),
endDate = Sys.Date(),
statCd = sCode
)
w_stat <- renameNWISColumns(willamette_temp_stat)
names(w_stat)
source("~/Documents/GitHub/StreamNotes/R/waterTempPlot.R")
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
names(w_stat)
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
cite <- create_NWIS_bib(willamette_temp)
class(cite)
cite
print(cite)
class(print(cite))
as.character(cite)
cite[1]
class(cite[1])
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
cite
runApp('StreamNotesApp.R')
?create_NWIS_bib
attr(willamette_temp)
attributes(willamette_temp)
runApp('StreamNotesApp.R')
head(willamette_temp)
w
head(w)
attributes(w)
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
list_models("github")
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
test_response <- call_llm(
prompt = "Generate a fishing report for a river with 100 cfs flow and 65°F water temperature",
provider = "github",
model = "openai/gpt-4o"
)
test_response <- call_llm(
prompt = "Generate a fishing report for a river with 100 cfs flow and 65°F water temperature",
provider = "github",
model = "openai/gpt-4o"
)
print(test_response)
runApp('StreamNotesApp.R')
?read_file
runApp('StreamNotesApp.R')
r < "hello"
r <- "hello"
g <- glue("I say {r} to you!")
g
class(g)
print(g)
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
runApp('StreamNotesApp.R')
will_temp_data <- readNWISuv(
siteNumbers = "14211720",
parameterCd = "00010",  # Water temp in °F (use 00010 for °C)
startDate = Sys.Date() - days(5),
endDate = Sys.Date()
willamette_temp <- readNWISuv(
siteNumbers = "14211720",
parameterCd = "00010",
startDate = Sys.Date() - days(5),
endDate = Sys.Date()
)
willamette_temp <- renameNWISColumns(willamette_temp)
names(willamette_temp)
runApp('StreamNotesApp.R')
setwd("~/Documents/GitHub/StreamNotes/R")
usethis::use_description()
install.packages("usethis")
library(usethis)
usethis::use_description()
usethis::use_rstudio()
